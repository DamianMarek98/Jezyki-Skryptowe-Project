# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sokoban.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import copy

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QPainter, QPalette
from PyQt5.QtWidgets import QVBoxLayout, QLabel, QGroupBox, QGridLayout, QPushButton
from logic.Board import Board, Direction, Field
from results.Results import Results, GameBoard
from PyQt5.Qt import Qt, QTimer
from logic.Mappers import *
from logic.Enums import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.playing: bool = False
        self.timer = QTimer(MainWindow)
        self.timer.timeout.connect(self.show_time)
        self.timer.start(100)
        self.time = 0
        self.player_can_move = True
        self.results = Results()
        self.game_board = GameBoard.EASY
        self.board = Board(1, 1)
        self.board.load_board_from_file(map_game_board_to_file_name(self.game_board))

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.vertical_menu = QtWidgets.QWidget(self.centralwidget)
        self.vertical_menu.setGeometry(QtCore.QRect(0, 20, 211, 311))
        self.vertical_menu.setObjectName("verticalLayoutWidget")
        self.game_info_layout = QtWidgets.QVBoxLayout(self.vertical_menu)
        self.game_info_layout.setContentsMargins(0, 0, 0, 0)
        self.game_info_layout.setObjectName("verticalLayout_2")
        self.start_stop_button = QtWidgets.QPushButton(self.vertical_menu)
        self.start_stop_button.clicked.connect(self.start_stop)
        self.start_stop_button.setObjectName("pushButton_7")
        self.game_info_layout.addWidget(self.start_stop_button)
        self.reset_button = QtWidgets.QPushButton(self.vertical_menu)
        self.reset_button.setObjectName("pushButton_2")
        self.game_info_layout.addWidget(self.reset_button)
        self.reset_button.clicked.connect(self.reset_board)
        self.load_button = QtWidgets.QPushButton(self.vertical_menu)
        self.load_button.setObjectName("pushButton_8")
        self.game_info_layout.addWidget(self.load_button)
        self.button_easy_board = QtWidgets.QPushButton(self.vertical_menu)
        self.button_easy_board.clicked.connect(self.load_easy_board)
        self.button_easy_board.setObjectName("pushButton_4")
        self.game_info_layout.addWidget(self.button_easy_board)
        self.button_med_board = QtWidgets.QPushButton(self.vertical_menu)
        self.button_med_board.setObjectName("pushButton_3")
        self.button_med_board.clicked.connect(self.load_med_board)
        self.game_info_layout.addWidget(self.button_med_board)
        self.button_hard_board = QtWidgets.QPushButton(self.vertical_menu)
        self.button_hard_board.clicked.connect(self.load_hard_board)
        self.button_hard_board.setObjectName("pushButton")
        self.game_info_layout.addWidget(self.button_hard_board)
        self.button_results = QtWidgets.QPushButton(self.vertical_menu)
        self.button_results.setObjectName("pushButton_5")
        self.game_info_layout.addWidget(self.button_results)
        self.button_reset_results = QtWidgets.QPushButton(self.vertical_menu)
        self.button_reset_results.setObjectName("pushButton_6")
        self.game_info_layout.addWidget(self.button_reset_results)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(280, 10, 451, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_poziom_planszy = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_poziom_planszy.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_poziom_planszy)
        self.label_time = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_time.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_time)
        self.label_score = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_score.setObjectName("label")
        self.horizontalLayout.addWidget(self.label_score)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 797, 21))
        self.menubar.setObjectName("menubar")
        self.menuinformacje = QtWidgets.QMenu(self.menubar)
        self.menuinformacje.setObjectName("menuinformacje")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuinformacje.menuAction())
        self.win_label = QtWidgets.QLabel('WYGRANA', self.centralwidget)
        self.win_label.setStyleSheet("color: green")
        self.win_label.move((MainWindow.window().width() - self.win_label.width()) / 2, 42)
        self.win_label.hide()
        self.horizontal_group_box = QGroupBox(map_game_board_to_level_name(self.game_board))
        MainWindow.layout().addWidget(self.horizontal_group_box)
        self.print_board()

        MainWindow.keyPressEvent = self.keyPressEvent

        self.retranslate_ui(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def start_stop(self):
        if self.win_label.isHidden():
            self.playing = self.playing != True
            self.start_stop_button_text()

    def start_stop_button_text(self):
            if self.playing == True:
                self.start_stop_button.setText("Stop")
            else:
                self.start_stop_button.setText("Start")

    def show_time(self):
        if self.playing:
            self.time += 1
            text = "Czas: " + str(self.time / 10) + " s"
            self.label_time.setText(text)

    def reset_board(self):
        self.board.load_board_from_file(map_game_board_to_file_name(self.game_board))
        self.time = 0
        self.playing = False
        self.start_stop_button_text()
        self.print_board()

    def load_easy_board(self):
        self.load_board(GameBoard.EASY)

    def load_med_board(self):
        self.load_board(GameBoard.MED)

    def load_hard_board(self):
        self.load_board(GameBoard.HARD)

    def load_board(self, game_board: GameBoard):
        self.game_board = game_board
        self.board.load_board_from_file(map_game_board_to_file_name(self.game_board))
        self.time = 0
        self.playing = False
        self.win_label.setHidden(True)
        self.player_can_move = True
        self.print_board()
        self.label_poziom_planszy.setText("Plansza: poziom " + map_game_board_to_level_name(self.game_board))

    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Escape:
            MainWindow.close()

        if self.player_can_move == True:
            if event.key() == Qt.Key_W or event.key() == Qt.Key_Up:
                self.move_player(Direction.UP)
            elif event.key() == Qt.Key_S or event.key() == Qt.Key_Down:
                self.move_player(Direction.DOWN)
            elif event.key() == Qt.Key_A or event.key() == Qt.Key_Left:
                self.move_player(Direction.LEFT)
            elif event.key() == Qt.Key_D or event.key() == Qt.Key_Right:
                self.move_player(Direction.RIGHT)

    def move_player(self, direction: Direction):
        self.playing = True
        self.start_stop_button_text()
        self.board.player_move(direction)
        self.print_board()
        self.label_score.setText(self.board.return_result())
        if self.board.check_if_player_won():
            self.playing = False
            self.player_can_move = False
            self.results.write_result(self.game_board, self.time / 10)
            self.win_label.setHidden(False)

    def print_board(self):
        MainWindow.layout().removeWidget(self.horizontal_group_box)
        self.horizontal_group_box = QGroupBox(map_game_board_to_level_name(self.game_board))
        layout = QGridLayout()
        for i in range(0, self.board.get_x()):
            for j in range(0, self.board.get_y()):
                if self.board.fields[i][j] == Field.WALL:
                    layout.addWidget(self.prepare_img('wall.bmp'), i, j)
                elif self.board.fields[i][j] == Field.EMPTY:
                    layout.addWidget(self.prepare_img('empty.bmp'), i, j)
                elif self.board.fields[i][j] == Field.GOAL:
                    layout.addWidget(self.prepare_img('goal.bmp'), i, j)
                elif self.board.fields[i][j] == Field.CHEST:
                    layout.addWidget(self.prepare_img('chest.bmp'), i, j)
                elif self.board.fields[i][j] == Field.PLAYER:
                    layout.addWidget(self.prepare_img('player.bmp'), i, j)

        self.horizontal_group_box.setLayout(layout)
        self.horizontal_group_box.setGeometry(QtCore.QRect(250, 75, 400, 400))
        MainWindow.layout().addWidget(self.horizontal_group_box)

    def prepare_img(self, file_name: str):
        img = QtWidgets.QLabel(self.centralwidget)
        img.setText("")
        img.setPixmap(QtGui.QPixmap("../graphics/" + file_name))
        img.setScaledContents(True)
        img.setObjectName("test")
        return img

    def retranslate_ui(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.start_stop_button.setText(_translate("MainWindow", "Start"))
        self.reset_button.setText(_translate("MainWindow", "Reset"))
        self.load_button.setText(_translate("MainWindow", "Wczytaj"))
        self.button_easy_board.setText(_translate("MainWindow", "Plansza łatwa"))
        self.button_med_board.setText(_translate("MainWindow", "Plansza średnia"))
        self.button_hard_board.setText(_translate("MainWindow", "Plansza trudna"))
        self.button_results.setText(_translate("MainWindow", "Wyniki"))
        self.button_reset_results.setText(_translate("MainWindow", "Resetuj wyniki"))
        self.label_poziom_planszy.setText(
            _translate("MainWindow", "Plansza: poziom " + map_game_board_to_level_name(self.game_board)))
        self.label_time.setText(_translate("MainWindow", "Czas: 0.0"))
        self.label_score.setText(
            _translate("MainWindow", "Wynik: " + str(self.board.chests_on_goals) + "/" + str(self.board.chests)))
        self.menuinformacje.setTitle(_translate("MainWindow", "Informacje"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    MainWindow.show()
    sys.exit(app.exec_())
